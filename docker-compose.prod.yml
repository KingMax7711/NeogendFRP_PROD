name: neogend_prod

services:
    reverse-proxy:
        image: nginx:alpine
        container_name: neogend_reverse_proxy
        depends_on:
            - frontend
            - backend
        restart: unless-stopped
        ports:
            - "80:80"
            # Activez 443 après émission du certificat et passage à la conf SSL
            # - "443:443"
        volumes:
            # Par défaut, démarrage en HTTP pour émettre le premier certificat
            - ./nginx/prod.http.conf:/etc/nginx/conf.d/default.conf:ro
            - ./data/certbot/www:/var/www/certbot
            - ./data/certbot/conf:/etc/letsencrypt
        networks:
            - neogend_net

    frontend:
        build:
            context: ./Neogend_React_App
        container_name: neogend_frontend
        restart: unless-stopped
        networks:
            - neogend_net
        # Pas de ports exposés en prod, le reverse proxy s'en charge
        healthcheck:
            test: ["CMD", "wget", "-qO-", "http://localhost/"]
            interval: 30s
            timeout: 5s
            retries: 5

    backend:
        build:
            context: ./Neogend_Python_API
        container_name: neogend_backend
        restart: unless-stopped
        environment:
            # DB
            POSTGRES_USER: neogend_user
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me}
            POSTGRES_DB: neogend_db
            POSTGRES_HOST: db
            POSTGRES_PORT: "5432"
            # API
            API_ROOT_PATH: "/api"
            SECRET_KEY: ${SECRET_KEY:-please_change_me}
            APP_RELEASE_STATUS: prod
            APP_VERSION: ${APP_VERSION:-1.0.0}
            FRONTEND_ORIGINS: ${FRONTEND_ORIGINS:-https://frp-neogend.fr}
            # Admin par défaut (créé seulement si aucun user)
            DEFAULT_ADMIN_NIPOL: ${DEFAULT_ADMIN_NIPOL:-123456789}
            DEFAULT_ADMIN_PASSWORD: ${DEFAULT_ADMIN_PASSWORD:-Admin123!}
        depends_on:
            - db
        networks:
            - neogend_net
        # Pas de port exposé, reverse proxy interne
        healthcheck:
            test:
                [
                    "CMD-SHELL",
                    "python - <<'PY'\nimport urllib.request,sys\ntry:\n    urllib.request.urlopen('http://localhost:8000/health', timeout=3).read()\n    sys.exit(0)\nexcept Exception:\n    sys.exit(1)\nPY\n",
                ]
            interval: 30s
            timeout: 5s
            retries: 5

    db:
        image: postgres:16
        container_name: neogend_db
        restart: unless-stopped
        environment:
            POSTGRES_USER: neogend_user
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change_me}
            POSTGRES_DB: neogend_db
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - neogend_net
        # Ne pas exposer le port 5432 en prod
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U neogend_user -d neogend_db"]
            interval: 30s
            timeout: 5s
            retries: 5

    certbot:
        image: certbot/certbot:latest
        container_name: neogend_certbot
        restart: unless-stopped
        volumes:
            - ./data/certbot/www:/var/www/certbot
            - ./data/certbot/conf:/etc/letsencrypt
        networks:
            - neogend_net
        # Boucle de renouvellement (toutes les 12h)
        entrypoint: sh
        command: -c "trap exit TERM; while :; do certbot renew --webroot -w /var/www/certbot --quiet; sleep 12h & wait $!; done"

    certbot_init:
        image: certbot/certbot:latest
        container_name: neogend_certbot_init
        depends_on:
            - reverse-proxy
        environment:
            - DOMAIN=${DOMAIN:-frp-neogend.fr}
            - CERTBOT_EMAIL=${CERTBOT_EMAIL:-admin@example.com}
        volumes:
            - ./data/certbot/www:/var/www/certbot
            - ./data/certbot/conf:/etc/letsencrypt
        networks:
            - neogend_net
        entrypoint: sh
        command: -c "certbot certonly --webroot -w /var/www/certbot -d $DOMAIN --email $CERTBOT_EMAIL --agree-tos --no-eff-email"

    # Optionnel: pgAdmin (à exposer uniquement en admin ou via tunnel)
    # pgadmin:
    #   image: dpage/pgadmin4
    #   container_name: neogend_pgadmin
    #   restart: unless-stopped
    #   environment:
    #     PGADMIN_DEFAULT_EMAIL: admin@neogend.fr
    #     PGADMIN_DEFAULT_PASSWORD: admin
    #     PGADMIN_CONFIG_SERVER_MODE: "True"
    #   networks:
    #     - neogend_net
    #   ports:
    #     - "5050:80"  # à éviter en prod, préférez un accès restreint

networks:
    neogend_net:
        driver: bridge

volumes:
    postgres_data:
